
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.13'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Create virtual environment
      run: uv venv

    - name: Install dependencies
      run: uv pip install -e ".[dev]"

    - name: Lint with black and isort
      run: |
        source .venv/bin/activate
        black --check .
        isort --check-only .

    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest

  release:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get version from CHANGELOG
        id: changelog
        run: |
          version=$(grep -oP '(?<=## \[v)[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -n 1)
          if [ -z "$version" ]; then
            version=$(grep -oP '(?<=## \[)[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -n 1)
          fi
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Release and Tag
        if: steps.changelog.outputs.version
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.changelel.outputs.version }}
          name: Release v${{ steps.changelog.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
